apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: space-cat-backend-api
    version: v1
  name: space-cat-backend-api-v1
  namespace: default
spec:
  replicas: 1
  minReadySeconds: 45
  selector:
    matchLabels:
      app: space-cat-backend-api
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: space-cat-backend-api
        version: v1
    spec:
      containers:
      - image: ugochukwu15/space-cat-backend:0.0.7.RELEASE
        imagePullPolicy: IfNotPresent
        name: space-cat-backend
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: space-cat-backend-api
    version: v2
  name: space-cat-backend-api-v2
  namespace: default
spec:
  replicas: 1
  minReadySeconds: 45
  selector:
    matchLabels:
      app: space-cat-backend-api
      version: v2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: space-cat-backend-api
        version: v2
    spec:
      containers:
      - image: ugochukwu15/space-cat-backend:0.0.8.RELEASE
        imagePullPolicy: IfNotPresent
        name: space-cat-backend
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: space-cat-backend-api
  name: space-cat-backend-api
  namespace: default
spec:
  ports:
  - nodePort: 31882
    port: 4000
    protocol: TCP
    targetPort: 4000
  selector:
    app: space-cat-backend-api
    # this below allocate all traffic to v2 alone and not v1
    version: v2
  sessionAffinity: None
  type: LoadBalancer